version: "3.2"
services:
  reverse-proxy:
    image: traefik:2.5
    command: --api.insecure=true --providers.docker=true --entrypoints.web.address=:80
    ports:
      - 8080:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mongodb:
    image: bitnami/mongodb:latest
    volumes:
      - "mongodb_data:/bitnami"
  scichat-loopback:
    image: dacat/scichat-loopback:e2e
    command:
      [
        "./wait-for-it.sh",
        "mongodb:27017",
        "--",
        "node",
        "-r",
        "dotenv/config",
        "."
      ]
    volumes:
      - "./CI/E2E/.env.scichat-loopback:/home/node/app/.env"
    depends_on:
      - mongodb
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./CI/E2E/backend.env:/home/node/app/.env"
    #  - "./CI/E2E/frontend.config.json:/home/node/app/dist/config/frontend.config.json"
    depends_on:
      - mongodb
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
  frontend:
    image: ghcr.io/scicatproject/frontend:latest
    #volumes:
    #  - "./CI/E2E/config-frontend.backend-e2e.json:/usr/share/nginx/html/assets/config.json"
    depends_on:
      - backend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"

  es01:
    depends_on:
      - mongodb
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - bootstrap.memory_lock=true

    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  mongodb_data:
    driver: local
  es01:
    driver: local
