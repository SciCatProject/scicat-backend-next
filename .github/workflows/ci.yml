name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: test
        run: |
          cp CI/ESS/docker-compose.gitlab.yaml docker-compose.yaml
          docker-compose down --remove-orphans
          docker-compose pull
          docker-compose up --build --exit-code-from scicat-backend
          docker-compose down

  e2etests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run stack in docker-compose
        run: |
          cp CI/E2E/docker-compose.yaml docker-compose.yaml
          docker-compose pull
          docker-compose build --no-cache
          docker-compose up &

      - name: Checkout frontend repo
        uses: actions/checkout@v3
        with:
          repository: scicatproject/frontend
          path: frontend
          fetch-depth: 1

      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: frontend
          config-file: CI/ESS/e2e/cypress.nestjs.json
          install-command: npm install --omit peer
          browser: chrome

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots/

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: frontend/cypress/videos/

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [test, e2etests]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/scicatproject/scicat-backend-next
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}

  gitlab:
    name: Deploy
    needs: [build]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger ESS pipeline
        uses: appleboy/gitlab-ci-action@master
        with:
          token: ${{ secrets.TOKEN }}
          project_id: 5160
          ref: "main"
          host: "https://gitlab.esss.lu.se"
          debug: true
